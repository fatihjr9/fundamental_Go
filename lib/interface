package main

import (
	"fmt"
)

type CentiMeters float64
type rectangle struct {
	width  float64
	height float64
}
type shape interface {
	getArea() float64
	getPerimeter() float64
}

func (r rectangle) getArea() float64 {
	return r.width * r.height
}

func (r rectangle) getPerimeter() float64 {
	return 2*r.width + 2*r.height
}

func measureShape(s shape) {
	fmt.Printf("Bentuk area dari %f\n", s.getArea())
	fmt.Printf("Bentuk perimeter dari %f\n", s.getPerimeter())
}

func (c CentiMeters) IsTooLong() {
	if c > 100 {
		fmt.Printf("Too long \n")
	} else {
		fmt.Printf("Just Right \n")
	}
}

func main() {
	myVar := CentiMeters(101)
	fmt.Printf("Type: %T, value %v\n", myVar, myVar)
	// myVar.IsTooLong()

	myRectangle := rectangle{
		width:  30,
		height: 20,
	}
	fmt.Printf("Type: %T, value %v\n", myRectangle, myRectangle)
	measureShape(myRectangle)
}
